<?php

    class DataBase
    {
            private $servername = "aa389941.mysql.tools";
            private $database = "aa389941_botbase";
            private $username = "aa389941_meridian246";
            private $password = "96stYP8BMf7h";

        public function DataBaseConnect()
        {
            $conn = mysqli_connect($this->servername, $this->username, $this->password, $this->database);
            if (!$conn) {return false;} else {return $conn;}
        }
        public function DataBaseDisconect($conn)
        {
            mysqli_close($conn);
        }
        public function TestChatId($chat_id)
        {
            $conn   =   $this->DataBaseConnect();
            $sql    =   "SELECT 1 FROM data_user WHERE chat_id=".$chat_id;
            $result =   mysqli_fetch_assoc( $result = mysqli_query($conn, $sql) );
            $this->DataBaseDisconect( $conn );
            if(count($result)>0){return true;}else{return false;}
        }
        public function GetUserOnID($id)
        {
            $conn   =   $this->DataBaseConnect();
            $sql    =   "SELECT 1 FROM data_user WHERE id=".$id;
            $result =   mysqli_fetch_assoc( $result = mysqli_query($conn, $sql) );
            $this->DataBaseDisconect( $conn );
            return $result;
        }
        public function GetUserOnChatID($chat_id)
        {
            $conn   =   $this->DataBaseConnect();
            $sql    =   "SELECT * FROM data_user WHERE chat_id=".$chat_id." LIMIT 1";
            $result =   mysqli_fetch_assoc( $result = mysqli_query($conn, $sql) );
            $this->DataBaseDisconect( $conn );
            return $result;
        }
        public function CreateUser($chat_id)
        {
            $conn   =   $this->DataBaseConnect();
            $sql = "INSERT INTO data_user (chat_id,Name,City,Busines,AboutSelf,WhoSearch,Img) VALUES ('$chat_id','0','0','0','na','0','na')";
            mysqli_query($conn, $sql);
            $result = mysqli_insert_id($conn);
            $this->DataBaseDisconect( $conn );
            return $result;
        }
        public function UpdateUserData($item,$chat_id,$message)
        {
            $conn   =   $this->DataBaseConnect();
            $sql = "UPDATE data_user SET ".$item."='".$message."' WHERE chat_id=".$chat_id;
            mysqli_query($conn, $sql);
            $result = $this->GetUserOnChatID($chat_id);
            return $result;
        }
    //    public function SetPhotoStore(){}
    }


    class MyBot extends DataBase
    {
            public           $botToken = '1238564789:AAF1kydnaZ_ZWXlBrCXVyKC5RVeOLynCMvg';
            public function  GetBotToken(){return $this->botToken;}
            public function  SetBotToken($bToken){$this->botToken = $bToken;}
            public function  sendMessage($method, $data, $token, $headers = [])
            {
                $curl = curl_init();
                curl_setopt_array($curl, [
                    CURLOPT_POST => 1,
                    CURLOPT_HEADER => 0,
                    CURLOPT_RETURNTRANSFER => 1,
                    CURLOPT_URL => 'https://api.telegram.org/bot' . $token . '/' . $method,
                    CURLOPT_POSTFIELDS => json_encode($data),
                    CURLOPT_HTTPHEADER => array_merge(array("Content-Type: application/json"))
                ]);
                $result = curl_exec($curl);
                curl_close($curl);
                return (json_decode($result, 1) ? json_decode($result, 1) : $result);
            }
            public function SwitchCaseStep_Name($message) //ok!
            {
                    switch ($message) 
                {
                    case '–Ω–µ—Ç':
                        $send_data = ['text' => '–ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –µ—â–µ!'];
                        break;
                    case '–¥–∞':
                        $send_data = ['text' => '–í–∞—à–µ –∏–º—è?'];
                        break;
                    default: //---------------------------------------------------//
                    $send_data = 
                    [
                        'text'=> '–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤. –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –¥–ª—è —Ä–µ–∫–ª–∞–º–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º–∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –∏ –µ—ë —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏. –ë–æ—Ç –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ –∫–æ—Ä—ã—Å—Ç–Ω—ã—Ö —Ü–µ–ª—è—Ö –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è. –ï—Å–ª–∏ –≤—ã —Å–æ–≥–ª–∞—Å—Ç–Ω—ã, –Ω–∞–∂–º–∏—Ç–µ –î–ê.',
                        'reply_markup'=>
                        [
                            'resize_keyboard' => true, 
                            'keyboard' =>   
                            [
                                [
                                    ['text' => '–î–∞'],
                                    ['text' => '–ù–µ—Ç'],
                                ]
                            ]
                        ]
                    ];
                }        
                return $send_data;
            }        
            public function SwitchCaseStep_City($message) //ok!
            {
                $send_data = ['text' => '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, '.$message.'! –ù–∞–ø–∏—à–∏—Ç–µ –∏–∑ –∫–∞–∫–æ–≥–æ –í—ã –≥–æ—Ä–æ–¥–∞'];
                return $send_data;
            }        
            public function SwitchCaseStep_Busines($message) //ok!
            {
                $this->UpdateUserData('City',$message);
                $send_data = 
                [
                    'text'=> $message.' –ö–ª–∞—Å—Å–Ω—ã–π –≥–æ—Ä–æ–¥! –ê –∫–µ–º –í—ã —è–≤–ª—è–µ—Ç–µ—Å—å? –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤',
                    'reply_markup'=>
                    [
                        'resize_keyboard' => true, 
                        'keyboard' =>   
                        [
                            [
                                ['text' => '–†–∞–±–æ—Ç–∞—é –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–æ–º'],
                                ['text' => '–í–ª–∞–¥–µ—é –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–º –∞–≥–µ–Ω—Å—Ç–≤–æ–º'],
                            ],
                            [
                                ['text' => '–ó–∞–Ω–∏–º–∞—é—Å—å –¥—Ä—É–≥–∏–º –±–∏–∑–Ω–µ—Å–æ–º'],
                                ['text' => '–î—Ä—É–≥–∞—è —Å—Ñ–µ—Ä–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'],
                            ]
                        ]
                    ]
                ];
                return $send_data;
            }        
            
            public function SwitchCaseStep_AboutSelf($message) //ok! step 1 on 2
            {
               // $this->UpdateUserData('Busines',$message);
                $UserName = $message;
                $send_data = 
                [
                    'text'=> $UserName.', –∞ —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∫–∞–∫–∏–º–∏ –Ω–∞–≤—ã–∫–∞–º–∏ –∏ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏—è–º–∏ –≤—ã –æ–±–ª–∞–¥–∞–µ—Ç–µ! –£–∫–∞–∂–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ –≤–∞—à–∏ —Å–∞–º—ã–µ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
                ];
                return $send_data;
            }     
               
            public function SwitchCaseStep_WhoSearch($message)
            {
                $UserName = $message;
                $send_data = 
                [
                    'text'=> $UserName.', –ó–¥–æ—Ä–æ–≤–æ! –ê –∫–æ–≥–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –Ω–∞–π—Ç–∏ –Ω–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏?',
                    'reply_markup'=>
                    [
                        'resize_keyboard' => true, 
                        'keyboard' =>   
                        [
                            [
                                ['text' => '–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∞'],
                                ['text' => '–ò–Ω–≤–µ—Å—Ç–æ—Ä–∞'],
                            ],
                            [
                                ['text' => '–ù–æ–≤—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞'],
                                ['text' => '–ó–∞–∫–∞–∑—á–∏–∫–∞'],
                            ],
                            [
                                ['text' => '–ü–∞—Ä—Ç–Ω–µ—Ä–∞'],
                                ['text' => '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ'],
                            ],
                        ]
                    ]
                ];
                return $send_data;
            }  
            
            /*      
            public function SwitchCaseStep_Photo($message)
            {
                $this->UpdateUserData('Busines',$message);
                $UserName = '–¢–µ—Å—Ç!!!';
                $send_data = 
                [
                    'text'=> $UserName.', –ö—Ä—É—Ç–æ! –ü—Ä–∏—à–ª–∏—Ç–µ –í–∞—à—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –Ω–∞ –∞–≤–∞—Ç–∞—Ä –ø—Ä–æ—Ñ–∏–ª—è –≤ –±–æ—Ç–µ',
                ];
                return $send_data;
            }        
            */
            public function RegFinal()
            {
                $send_data = 
                [
                    'text'=> '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ üíô –°–æ—á–∏–Ω—Å–∫–∏–π –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –§–æ—Ä—É–º ‚Äì –≥–ª–∞–≤–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ø—Ä–æ –ø—Ä–æ–¥–∞–∂–∏ –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –≤ –°–æ—á–∏! –ó–¥–µ—Å—å –í—ã –Ω–∞–π–¥–µ—Ç–µ —Ç–µ—Ö, –∫—Ç–æ –ø–æ–º–æ–∂–µ—Ç –í–∞–º –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å!',
                    'reply_markup'=>
                    [
                        'resize_keyboard' => true, 
                        'keyboard' =>   
                        [
                            [
                                ['text' => 'Sochi Marketing Forum'],
                            ],
                            [
                                ['text' => '–í–æ–ø—Ä–æ—Å –°–ø–∏–∫–µ—Ä—É'],
                                ['text' => 'Time Line'],
                            ],
                            [
                                ['text' => '–ü—Ä–æ—Ñ–∏–ª—å'],
                                ['text' => '–ù–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥'],
                            ],
                        ]
                    ]
                ];
                return $send_data;
            }

    }


?>

